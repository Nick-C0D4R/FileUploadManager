@page "/"
@using Azure.Storage.Blobs;
@using FileUploadManager.Data;
@using System.Net.Mail;
@inject IJSRuntime JsRuntime

<PageTitle>Index</PageTitle>

@*<InputText />*@   

<div class="d-flex justify-content-center">
    <EditForm Model="@model" OnSubmit="@LoadFile">
        <div>
            <InputFile OnChange="@ChangeFile" id="file" class="form-control" @bind-Value="@model.File" />
            <span id="error-span"></span>
        </div>
        <div>
            <InputText class="form-control" placeholder="Enter your e-mail" @bind-Value="@model.Email" />
        </div>
        <div>
            <input type="submit" value="Submit" id="submit-button" class="form-control btn btn-md btn-warning" />
        </div>
    </EditForm>
</div>






@code{
    private UploadModel model = new();

    private async void ChangeFile(InputFileChangeEventArgs e)
    {
        model.File = e.File;
        await JsRuntime.InvokeVoidAsync("clearError");
        string extension = new FileInfo(model.File.Name).Extension;
        if (extension != ".docx")
        {
            await JsRuntime.InvokeVoidAsync("handleError");
        }

    }

    public async void LoadFile()
    {
        IConfigurationRoot config = new ConfigurationBuilder().AddJsonFile("appsettings.json").Build();
        string connectionString = config.GetSection("AzureSettings")["ConnectionString"];
        string storageName = config.GetSection("AzureSettings")["BlobName"];
        string baseUrl = config.GetSection("AzureSettings")["URL"];
        BlobServiceClient serviceClient = new BlobServiceClient(connectionString);
        BlobContainerClient container = serviceClient.GetBlobContainerClient(storageName);
        if(!await container.ExistsAsync())
        {
            container = await serviceClient.CreateBlobContainerAsync(storageName);
        }
        //await container.CreateIfNotExistsAsync();
        FileUploadService service = new FileUploadService(container);

        await service.Load($"[{model.Email}]{model.File.Name}", model.File);
    }
}